apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: geoserver
  name: geoserver
spec:
  containers:
  - env:
    - name: ENABLE_JSONP
      valueFrom:
        configMapKeyRef:
          key: ENABLE_JSONP
          name: docker-env-geoserver-env
    - name: FOOTPRINTS_DATA_DIR
      valueFrom:
        configMapKeyRef:
          key: FOOTPRINTS_DATA_DIR
          name: docker-env-geoserver-env
    - name: GEOSERVER_ADMIN_PASSWORD
      valueFrom:
        configMapKeyRef:
          key: GEOSERVER_ADMIN_PASSWORD
          name: docker-env-geoserver-env
    - name: GEOSERVER_CSRF_DISABLED
      valueFrom:
        configMapKeyRef:
          key: GEOSERVER_CSRF_DISABLED
          name: docker-env-geoserver-env
    - name: GEOSERVER_DATA_DIR
      valueFrom:
        configMapKeyRef:
          key: GEOSERVER_DATA_DIR
          name: docker-env-geoserver-env
    - name: GEOWEBCACHE_CACHE_DIR
      valueFrom:
        configMapKeyRef:
          key: GEOWEBCACHE_CACHE_DIR
          name: docker-env-geoserver-env
    - name: INITIAL_MEMORY
      valueFrom:
        configMapKeyRef:
          key: INITIAL_MEMORY
          name: docker-env-geoserver-env
    - name: MAXIMUM_MEMORY
      valueFrom:
        configMapKeyRef:
          key: MAXIMUM_MEMORY
          name: docker-env-geoserver-env
    - name: MAX_FILTER_RULES
      valueFrom:
        configMapKeyRef:
          key: MAX_FILTER_RULES
          name: docker-env-geoserver-env
    - name: OPTIMIZE_LINE_WIDTH
      valueFrom:
        configMapKeyRef:
          key: OPTIMIZE_LINE_WIDTH
          name: docker-env-geoserver-env
    - name: SAMPLE_DATA
      valueFrom:
        configMapKeyRef:
          key: SAMPLE_DATA
          name: docker-env-geoserver-env
    - name: STABLE_EXTENSIONS
      valueFrom:
        configMapKeyRef:
          key: STABLE_EXTENSIONS
          name: docker-env-geoserver-env
    - name: XFRAME_OPTIONS
      valueFrom:
        configMapKeyRef:
          key: XFRAME_OPTIONS
          name: docker-env-geoserver-env
    image: kartoza/geoserver:2.17.0
    livenessProbe:
      exec:
        command:
        - --fail
        - -s
        - http://localhost:8080/
        - '||'
        - exit 1
      failureThreshold: 3
      periodSeconds: 90
      timeoutSeconds: 10
    name: geoserver
    ports:
    - containerPort: 8080
    resources: {}
    volumeMounts:
    - mountPath: /opt/geoserver/data_dir
      name: geoserver-data
  restartPolicy: OnFailure
  volumes:
  - name: geoserver-data
    persistentVolumeClaim:
      claimName: geoserver-data
status: {}
